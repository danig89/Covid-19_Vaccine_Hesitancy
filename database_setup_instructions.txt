1. Open pgAdmin. Create a new server. Name the server vaccine-hesitancy.

2. Switch to the Connection tab at the top. Enter "vaccine-hesitancy.czxeoxdbrl4n.us-east-1.rds.amazonaws.com" for the Host name/address. 

3. Leave the Username as "postgres". 

4. For the Password enter "". Check the box to save the password. 

5. Click the save button at the bottom. 

6. Your new server should appear in the server list. Query the "vaccine_hesitancy" database to ensure you are pulling data from the server correctly. Due to the size of some of the tables it can take a minute or two for queries to complete. 




######################################################################################
OLD INSTRUCTIONS:

1. Download the zip file with the five datasets from https://github.com/danig89/Covid-19_Vaccine_Hesitancy/tree/database. Unzip the files into your local directory.

2. Pull the Vaccine_Hesitancy.sql, DB_connection_to_ml_model.ipynb, and Vaccine_Hesitancy_Data_Exploration.ipynb files into your local local directory.

3. Open pgAdmin. Create a new database. Name it "vaccine_hesitancy". Once it has been created, open the query tool (right click on the database name in pgAdmin, and select query tool). 

4. Copy and paste the code from Vaccine_Heistancy.sql into the query tool. Run it. Verify that four tables have been created by going to Schemas -> Tables. 

5. In your local repository, create a .py file named config. In the file, create a variable named db_password. Set it to your password for the server you created the database in. I.E. I created a file named config.py. In the first line of the file, I entered db_password = "password1". Save this config.py file in the same folder as the above .ipynb files! 

6. Open Vaccine_Hesitancy_Data_Exploration.ipynb in Jupyter Notebook. Verify your config.py file is in the same folder as the notebook, and that your unzipped datasets are also in the same folder. Run all cells in the file. 

7. Back in pgAdmin, use the query tool to query all four tables and verify they now contain data. I.E. SELECT * FROM census_demographic. 

8. Verify all tables contain data. 

9. Select the query tool again. Run the below code snipped to join the vaccine_hesitancy_covid table with the census_demographic table. This step is to meet requirements on the rubric, and normally would have been done in pandas. 

SELECT *
INTO full_county_data
FROM vaccine_hesitancy_covid
FULL OUTER JOIN census_demographic
ON vaccine_hesitancy_covid.fips_code = census_demographic."CountyId";

10. Verify the joined table contains data. Your database is now set up. You can use the code Run the code in DB_connection_to_ml_model.ipynb. 

11. From here, you can copy the code DB_connection_to_ml_model.ipynb into the notebook you are using to create/test your model. Run the code to create the dataframes, and then you can create variables from the dataframes to input into the model. 
